<?php
/**
斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：

F(0) = 0，F(1) = 1
F(n) = F(n - 1) + F(n - 2)，其中 n > 1
给定 n ，请计算 F(n) 。

答案需要取模 1e9+7(1000000007) ，如计算初始结果为：1000000008，请返回 1。



示例 1：

输入：n = 2
输出：1
解释：F(2) = F(1) + F(0) = 1 + 0 = 1
示例 2：

输入：n = 3
输出：2
解释：F(3) = F(2) + F(1) = 1 + 1 = 2
示例 3：

输入：n = 4
输出：3
解释：F(4) = F(3) + F(2) = 2 + 1 = 3


提示：

0 <= n <= 100
 **/

class Solution {

    /**
     * @param Integer $n
     * @return Integer
     */
    function fib($n) {
        if($n <= 1) return $n;

        $a = 0;
        $b = 1;
        $res = 1;
        for($i=2;$i<=$n;$i++){
            $tmp = $a+$b;
            $a = $b;
            $b = $tmp%1000000007;
            $res = $tmp%1000000007;
        }

        return $res;
    }
}

$a = new Solution();
var_dump($a->fib(95));


/**
这里主要问题是需要和 1000000007 取余，直接获取结果，再去取余是不对的，因为每一项都需要取余，原因是 返回的结果要取余，那么对应即每一项要是返回，都应该是正确结果，即需要取余

**/
